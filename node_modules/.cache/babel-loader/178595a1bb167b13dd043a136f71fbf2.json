{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\nfunction Converter() {\n  const [result, setResult] = useState(null);\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"GBP\");\n  const [amount, setAmount] = useState(1);\n  const [currencies, setCurrencies] = useState([]);\n  React.useEffect(() => {\n    axios.get(\"https://api.openrates.io/latest\").then(response => {\n      const currencyArr = [\"EUR\"]; //setting up avb currencies to choose from\n\n      for (const key in response.data.rates) {\n        currencyArr.push(key);\n      }\n\n      setCurrencies(currencyArr);\n    }).catch(err => {\n      console.log(\"Something went wrong\", err);\n    });\n  }, []); // Empty array to only run once on mount.\n\n  const convertHandler = () => {\n    if (fromCurrency !== toCurrency) {\n      axios.get(`https://api.openrates.io/latest?base=${fromCurrency}&symbols=${toCurrency}`).then(response => {\n        const result = amount * response.data.rates[toCurrency];\n        setResult(result.toFixed(5));\n      }).catch(error => {\n        console.log(\"Opps\", error.message);\n      });\n    } else {\n      setResult(\"You cant convert the same currency!\");\n    }\n  };\n\n  const selectHandler = e => {\n    e.target.name === \"from\" ? setFromCurrency(e.target.value) : e.target.name === \"to\" ? setToCurrency(e.target.value) : null;\n    console.log(fromCurrency, toCurrency);\n  };\n  /*   const selectHandler = event => {\n      setFromCurrency(\n        event.target.name === \"from\" ? event.target.value : fromCurrency\n      )\n      setToCurrency(\n        event.target.name === \"to\" ? event.target.value : toCurrency\n      )\n    }; */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Currency\"), \"Converter\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"money\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCB5\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"From\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"amount\",\n    type: \"text\",\n    value: amount,\n    onChange: event => setAmount(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"from\",\n    onChange: event => selectHandler(event),\n    value: fromCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n    key: cur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, cur))), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"to\",\n    onChange: event => selectHandler(event),\n    value: toCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n    key: cur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, cur))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: convertHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Convert\"), result && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }\n  }, result)));\n}\n\nexport default Converter;","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js"],"names":["React","useState","axios","Converter","result","setResult","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","currencies","setCurrencies","useEffect","get","then","response","currencyArr","key","data","rates","push","catch","err","console","log","convertHandler","toFixed","error","message","selectHandler","e","target","name","value","event","map","cur"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\n\nfunction Converter() {\n  const [result, setResult] = useState(null)\n  const [fromCurrency, setFromCurrency] = useState(\"USD\")\n  const [toCurrency, setToCurrency] = useState(\"GBP\")\n  const [amount, setAmount] = useState(1)\n  const [currencies, setCurrencies] = useState([])\n\n  React.useEffect(() => {\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        //setting up avb currencies to choose from\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        setCurrencies(currencyArr);\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }, []); // Empty array to only run once on mount.\n\n  const convertHandler = () => {\n    if (fromCurrency !== toCurrency) {  \n      axios\n        .get(\n          `https://api.openrates.io/latest?base=${\n            fromCurrency}&symbols=${toCurrency}`\n        )\n        .then(response => {\n          const result = \n            amount * response.data.rates[toCurrency];\n          setResult(result.toFixed(5));\n        })\n        .catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n    } else {\n      setResult(\"You cant convert the same currency!\");\n    }\n  };\n \n  const selectHandler = e => {\n    e.target.name === \"from\" ? setFromCurrency(e.target.value) :\n      e.target.name === \"to\" ? setToCurrency(e.target.value) : null\n      console.log(fromCurrency, toCurrency)\n  }\n\n\n\n/*   const selectHandler = event => {\n    setFromCurrency(\n      event.target.name === \"from\" ? event.target.value : fromCurrency\n    )\n    setToCurrency(\n      event.target.name === \"to\" ? event.target.value : toCurrency\n    )\n  }; */\n\n  return (\n    <div className=\"Converter\">\n        <h2>\n          <span>Currency</span>Converter\n          <span role=\"img\" aria-label=\"money\">\n            &#x1f4b5;\n          </span>\n        </h2>\n        <div className=\"From\">\n          <input\n            name=\"amount\"\n            type=\"text\"\n            value={amount}\n            onChange={event => setAmount(event.target.value )}\n          />\n          <select\n            name=\"from\"\n            onChange={event => selectHandler(event)}\n            value={fromCurrency}\n          >\n            {currencies.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <select\n            name=\"to\"\n            onChange={event => selectHandler(event)}\n            value={toCurrency}\n          >\n            {currencies.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <button onClick={convertHandler}>Convert</button>\n          {result && <h3>{result}</h3>}\n        </div>\n      </div>\n  );\n}\n\nexport default Converter;"]},"metadata":{},"sourceType":"module"}