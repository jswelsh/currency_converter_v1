{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/CurrencyHistoryGraph.js\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport axios from 'axios';\nam4core.useTheme(am4themes_animated);\nconst exchangeRatesURL = \"https://api.exchangeratesapi.io/history?start_at=2018-01-01&end_at=2018-09-01&\";\nconst fromCurrency = \"CAD\";\nconst toCurrency = \"USD\";\nexport default function CurrencyConversionGraph() {\n  let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n  chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n  let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  /*  valueAxis.renderer.minWidth = 50;\n    valueAxis.min = 0;\n    valueAxis.cursorTooltipEnabled = false; */\n\n  let series = chart.series.push(new am4charts.LineSeries());\n  series.dataFields.valueY = \"value\";\n  series.dataFields.dateX = \"date\";\n  series.tooltipText = \"{value}\"; //series.tooltip.pointerOrientation = \"vertical\";\n\n  series.strokeWidth = 2;\n  series.minBulletDistance = 15; // Drop-shaped tooltips\n\n  series.tooltip.background.cornerRadius = 20;\n  series.tooltip.background.strokeOpacity = 0;\n  series.tooltip.pointerOrientation = \"vertical\";\n  series.tooltip.label.minWidth = 40;\n  series.tooltip.label.minHeight = 40;\n  series.tooltip.label.textAlign = \"middle\";\n  series.tooltip.label.textValign = \"middle\"; // Make bullets grow on hover\n\n  let bullet = series.bullets.push(new am4charts.CircleBullet());\n  bullet.circle.strokeWidth = 2;\n  bullet.circle.radius = 4;\n  bullet.circle.fill = am4core.color(\"#fff\");\n  let bullethover = bullet.states.create(\"hover\");\n  bullethover.properties.scale = 1.3; // Make a panning cursor\n\n  chart.cursor = new am4charts.XYCursor();\n  chart.cursor.behavior = \"panXY\";\n  chart.cursor.xAxis = dateAxis;\n  chart.cursor.snapToSeries = series; // Create vertical scrollbar and place it before the value axis\n\n  chart.scrollbarY = new am4core.Scrollbar();\n  chart.scrollbarY.parent = chart.leftAxesContainer;\n  chart.scrollbarY.toBack(); // Create a horizontal scrollbar with previe and place it underneath the date axis\n\n  chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n  chart.scrollbarX.parent = chart.bottomAxesContainer;\n  dateAxis.start = 0.79;\n  dateAxis.keepSelection = true;\n\n  const convertHandler = () => {\n    console.log(\"hi\");\n    /* if (state.fromCurrency !== state.toCurrency) {   */\n\n    axios.get(`${exchangeRatesURL}base=${fromCurrency}&symbols=${toCurrency}`).then(res => {\n      console.log(\"first\", res);\n      /*             let historyController = (currency, historyObj) => {\n                    let history = {}\n                    for (const [key, value] of Object.entries(historyObj)) { history[key] = value[currency]}\n                    return history\n                  }\n                  let toCurrencyHistory = historyController(toCurrency, res.rates);\n                  let fromCurrencyHistory = historyController(fromCurrency, res.rates);\n                  console.log(toCurrencyHistory,fromCurrencyHistory); */\n    }).catch(error => {\n      console.log(\"Opps\", error.message);\n    });\n    /*} else {\n      setResult(\"You cant convert the same currency!\");\n    }\n    }; */\n  };\n\n  convertHandler();\n  /* chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n   */\n\n  /*   chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = categoryAxis;\n    chart.cursor.snapToSeries = series; */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartdiv\",\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/CurrencyHistoryGraph.js"],"names":["React","am4core","am4charts","am4themes_animated","axios","useTheme","exchangeRatesURL","fromCurrency","toCurrency","CurrencyConversionGraph","chart","create","XYChart","dateFormatter","inputDateFormat","dateAxis","xAxes","push","DateAxis","valueAxis","yAxes","ValueAxis","series","LineSeries","dataFields","valueY","dateX","tooltipText","strokeWidth","minBulletDistance","tooltip","background","cornerRadius","strokeOpacity","pointerOrientation","label","minWidth","minHeight","textAlign","textValign","bullet","bullets","CircleBullet","circle","radius","fill","color","bullethover","states","properties","scale","cursor","XYCursor","behavior","xAxis","snapToSeries","scrollbarY","Scrollbar","parent","leftAxesContainer","toBack","scrollbarX","XYChartScrollbar","bottomAxesContainer","start","keepSelection","convertHandler","console","log","get","then","res","catch","error","message","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport axios from 'axios';\n\nam4core.useTheme(am4themes_animated);\n\nconst exchangeRatesURL = \"https://api.exchangeratesapi.io/history?start_at=2018-01-01&end_at=2018-09-01&\";\nconst fromCurrency = \"CAD\";\nconst toCurrency = \"USD\";\n\n\n\nexport default function CurrencyConversionGraph() {\n  let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n  chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n\n  let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  \n/*  valueAxis.renderer.minWidth = 50;\n  valueAxis.min = 0;\n  valueAxis.cursorTooltipEnabled = false; */\n\n  let series = chart.series.push(new am4charts.LineSeries());\n  series.dataFields.valueY = \"value\";\n  series.dataFields.dateX = \"date\";\n  series.tooltipText = \"{value}\";\n  //series.tooltip.pointerOrientation = \"vertical\";\n  series.strokeWidth = 2;\n  series.minBulletDistance = 15;\n\n  // Drop-shaped tooltips\n  series.tooltip.background.cornerRadius = 20;\n  series.tooltip.background.strokeOpacity = 0;\n  series.tooltip.pointerOrientation = \"vertical\";\n  series.tooltip.label.minWidth = 40;\n  series.tooltip.label.minHeight = 40;\n  series.tooltip.label.textAlign = \"middle\";\n  series.tooltip.label.textValign = \"middle\";\n\n\n  // Make bullets grow on hover\n  let bullet = series.bullets.push(new am4charts.CircleBullet());\n  bullet.circle.strokeWidth = 2;\n  bullet.circle.radius = 4;\n  bullet.circle.fill = am4core.color(\"#fff\");\n\n  let bullethover = bullet.states.create(\"hover\");\n  bullethover.properties.scale = 1.3;\n\n  // Make a panning cursor\n  chart.cursor = new am4charts.XYCursor();\n  chart.cursor.behavior = \"panXY\";\n  chart.cursor.xAxis = dateAxis;\n  chart.cursor.snapToSeries = series;\n\n  // Create vertical scrollbar and place it before the value axis\n  chart.scrollbarY = new am4core.Scrollbar();\n  chart.scrollbarY.parent = chart.leftAxesContainer;\n  chart.scrollbarY.toBack();\n\n  // Create a horizontal scrollbar with previe and place it underneath the date axis\n  chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n  chart.scrollbarX.parent = chart.bottomAxesContainer;\n\n  dateAxis.start = 0.79;\n  dateAxis.keepSelection = true;\n  const convertHandler = () => {\n    console.log(\"hi\")\n      /* if (state.fromCurrency !== state.toCurrency) {   */\n        axios\n          .get(\n            `${exchangeRatesURL}base=${fromCurrency}&symbols=${toCurrency}`\n          )\n          .then(res => {\n            console.log(\"first\", res)\n/*             let historyController = (currency, historyObj) => {\n              let history = {}\n              for (const [key, value] of Object.entries(historyObj)) { history[key] = value[currency]}\n              return history\n            }\n            let toCurrencyHistory = historyController(toCurrency, res.rates);\n            let fromCurrencyHistory = historyController(fromCurrency, res.rates);\n            console.log(toCurrencyHistory,fromCurrencyHistory); */\n  \n          })\n          .catch(error => {\n            console.log(\"Opps\", error.message);\n          });\n      /*} else {\n        setResult(\"You cant convert the same currency!\");\n      }\n     }; */\n  }\n  convertHandler()\n\n  /* chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n   */\n/*   chart.cursor = new am4charts.XYCursor();\n  chart.cursor.xAxis = categoryAxis;\n  chart.cursor.snapToSeries = series; */\n\n\n  return (\n    <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n  );\n}"]},"metadata":{},"sourceType":"module"}