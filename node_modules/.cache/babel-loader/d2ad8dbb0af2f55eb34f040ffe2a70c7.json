{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\nexport default Converter;\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props); //need to update this as its depreciated\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        axios.get(\n        /* \n        I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n        */\n        `https://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`).then(response => {\n          const result = this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({\n            result: result.toFixed(5)\n          });\n        });\n      }\n    };\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        /* \n          I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n          */\n        axios.get(`https://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`).then(response => {\n          const result = this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({\n            result: result.toFixed(5)\n          });\n        }).catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n      } else {\n        this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.openrates.io/latest\").then(response => {\n      const currencyArr = [\"EUR\"];\n\n      for (const key in response.data.rates) {\n        currencyArr.push(key);\n      }\n\n      this.setState({\n        currencies: currencyArr\n      });\n    }).catch(err => {\n      console.log(\"Something went wrong\", err);\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js"],"names":["React","axios","Converter","Component","constructor","props","convertHandler","state","fromCurrency","toCurrency","get","then","response","result","amount","data","rates","setState","toFixed","catch","error","console","log","message","currencies","componentDidMount","currencyArr","key","push","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AAEA,eAAeC,SAAf;;AAEA,MAAMA,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CACH;;AADG,SAwBnBC,cAxBmB,GAwBF,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWE,UAA3C,EAAuD;AACrDR,QAAAA,KAAK,CACFS,GADH;AAEI;;;AAGC,gDACC,KAAKH,KAAL,CAAWC,YACZ,YAAW,KAAKD,KAAL,CAAWE,UAAW,EAPtC,EASGE,IATH,CASQC,QAAQ,IAAI;AAChB,gBAAMC,MAAM,GACV,KAAKN,KAAL,CAAWO,MAAX,GAAoBF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,KAAKT,KAAL,CAAWE,UAA/B,CADtB;AAEE,eAAKQ,QAAL,CAAc;AAAEJ,YAAAA,MAAM,EAAEA,MAAM,CAACK,OAAP,CAAe,CAAf;AAAV,WAAd;AAEH,SAdH;AAeD;AACF,KA1CkB;;AAAA,SA2CnBZ,cA3CmB,GA2CF,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWE,UAA3C,EAAuD;AACnD;;;AAGFR,QAAAA,KAAK,CACFS,GADH,CAEK,wCACC,KAAKH,KAAL,CAAWC,YACZ,YAAW,KAAKD,KAAL,CAAWE,UAAW,EAJtC,EAMGE,IANH,CAMQC,QAAQ,IAAI;AAChB,gBAAMC,MAAM,GACV,KAAKN,KAAL,CAAWO,MAAX,GAAoBF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,KAAKT,KAAL,CAAWE,UAA/B,CADtB;AAEA,eAAKQ,QAAL,CAAc;AAAEJ,YAAAA,MAAM,EAAEA,MAAM,CAACK,OAAP,CAAe,CAAf;AAAV,WAAd;AACD,SAVH,EAWGC,KAXH,CAWSC,KAAK,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAAK,CAACG,OAA1B;AACD,SAbH;AAcD,OAlBD,MAkBO;AACL,aAAKN,QAAL,CAAc;AAAEJ,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KAjEkB;;AAEjB,SAAKN,KAAL,GAAa;AACXM,MAAAA,MAAM,EAAE,IADG;AAEXL,MAAAA,YAAY,EAAE,KAFH;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXK,MAAAA,MAAM,EAAE,CAJG;AAKXU,MAAAA,UAAU,EAAE;AALD,KAAb;AAOD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBxB,IAAAA,KAAK,CACFS,GADH,CACO,iCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMc,WAAW,GAAG,CAAC,KAAD,CAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBf,QAAQ,CAACG,IAAT,CAAcC,KAAhC,EAAuC;AACrCU,QAAAA,WAAW,CAACE,IAAZ,CAAiBD,GAAjB;AACD;;AACD,WAAKV,QAAL,CAAc;AAACO,QAAAA,UAAU,EAAEE;AAAb,OAAd;AACD,KARH,EASGP,KATH,CASSU,GAAG,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCO,GAApC;AACD,KAXH;AAYD;;AAxBqC","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\nexport default Converter;\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props); //need to update this as its depreciated\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        this.setState({currencies: currencyArr});\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }\n  convertHandler = () => {\n    if (this.state.fromCurrency !== this.state.toCurrency) {\n      axios\n        .get(\n          /* \n          I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n          */\n          `https://api.openrates.io/latest?base=${\n            this.state.fromCurrency\n          }&symbols=${this.state.toCurrency}`\n        )\n        .then(response => {\n          const result =\n            this.state.amount * response.data.rates[this.state.toCurrency];\n            this.setState({ result: result.toFixed(5) });\n\n        })\n    }\n  }\n  convertHandler = () => {\n    if (this.state.fromCurrency !== this.state.toCurrency) {\n        /* \n          I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n          */\n      axios\n        .get(\n          `https://api.openrates.io/latest?base=${\n            this.state.fromCurrency\n          }&symbols=${this.state.toCurrency}`\n        )\n        .then(response => {\n          const result =\n            this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({ result: result.toFixed(5) });\n        })\n        .catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n    } else {\n      this.setState({ result: \"You cant convert the same currency!\" });\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}