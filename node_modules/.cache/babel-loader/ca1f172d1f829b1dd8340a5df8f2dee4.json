{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props); //need to update this as its depreciated\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        /* \n          I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n        */\n        console.log(`https://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`);\n        axios.get(`https://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`).then(response => {\n          const result = this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({\n            result: result.toFixed(5)\n          });\n        }).catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n      } else {\n        this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    this.selectHandler = event => {\n      if (event.target.name === \"from\") {\n        this.setState({\n          fromCurrency: event.target.value\n        });\n      } else {\n        if (event.target.name === \"to\") {\n          this.setState({\n            toCurrency: event.target.value\n          });\n        }\n      }\n    };\n\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.openrates.io/latest\").then(response => {\n      const currencyArr = [\"EUR\"]; //setting up avb currencies to choose from\n\n      for (const key in response.data.rates) {\n        currencyArr.push(key);\n      }\n\n      this.setState({\n        currencies: currencyArr\n      });\n    }).catch(err => {\n      console.log(\"Something went wrong\", err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Converter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Currency\"), \"Converter\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"money\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"\\uD83D\\uDCB5\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"amount\",\n      type: \"text\",\n      value: this.state.amount,\n      onChange: event => this.setState({\n        amount: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"from\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.fromCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, this.state.currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, cur))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"to\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.toCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, this.state.currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, cur))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.convertHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Convert\"), this.state.result && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, this.state.result)));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js"],"names":["React","axios","Converter","Component","constructor","props","convertHandler","state","fromCurrency","toCurrency","console","log","get","then","response","result","amount","data","rates","setState","toFixed","catch","error","message","selectHandler","event","target","name","value","currencies","componentDidMount","currencyArr","key","push","err","render","map","cur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props); //need to update this as its depreciated\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        //setting up avb currencies to choose from\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        this.setState({currencies: currencyArr});\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  };\n  convertHandler = () => {\n    if (this.state.fromCurrency !== this.state.toCurrency) {\n        /* \n          I believe the api changed and needs it to be http://api.openrates.io/latest?symbols=USD,GBP\n        */\n       console.log(`https://api.openrates.io/latest?base=${\n        this.state.fromCurrency\n      }&symbols=${this.state.toCurrency}`)\n      axios\n        .get(\n          `https://api.openrates.io/latest?base=${\n            this.state.fromCurrency\n          }&symbols=${this.state.toCurrency}`\n        )\n        .then(response => {\n          const result =\n            this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({ result: result.toFixed(5) });\n        })\n        .catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n    } else {\n      this.setState({ result: \"You cant convert the same currency!\" });\n    }\n  };\n  selectHandler = event => {\n    if (event.target.name === \"from\") {\n      this.setState({ fromCurrency: event.target.value });\n    } else {\n      if(event.target.name === \"to\") {\n        this.setState({ toCurrency: event.target.value});\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Converter\">\n        <h2>\n          <span>Currency</span>Converter\n          <span role=\"img\" aria-label=\"money\">\n            &#x1f4b5;\n          </span>\n        </h2>\n        <div className=\"From\">\n          <input\n            name=\"amount\"\n            type=\"text\"\n            value={this.state.amount}\n            onChange={event => this.setState({ amount: event.target.value })}\n          />\n          <select\n            name=\"from\"\n            onChange={event => this.selectHandler(event)}\n            value={this.state.fromCurrency}\n          >\n            {this.state.currencies.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <select\n            name=\"to\"\n            onChange={event => this.selectHandler(event)}\n            value={this.state.toCurrency}\n          >\n            {this.state.currencies.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <button onClick={this.convertHandler}>Convert</button>\n          {this.state.result && <h3>{this.state.result}</h3>}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Converter;"]},"metadata":{},"sourceType":"module"}