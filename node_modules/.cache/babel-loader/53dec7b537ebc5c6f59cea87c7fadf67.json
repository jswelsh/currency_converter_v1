{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/CurrencyConversionGraph.js\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\nlet testData = {\n  \"rates\": {\n    \"CAD\": 1.0,\n    \"HKD\": 5.89,\n    \"ISK\": 102.72,\n    \"PHP\": 36.78,\n    \"DKK\": 4.75\n  }\n};\nlet currenciesList = testData[\"rates\"];\nexport default function CurrencyConversionGraph() {\n  let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n  chart.data = generateChartData(); //let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n\n  categoryAxis.dataFields.category = \"currency\";\n  categoryAxis.renderer.grid.template.location = 0;\n  categoryAxis.renderer.minGridDistance = 5;\n  categoryAxis.tooltip.disabled = true;\n  let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  /* \n  valueAxis.renderer.minWidth = 50;\n  valueAxis.min = 0;\n  valueAxis.cursorTooltipEnabled = false;\n  */\n\n  /* \n  let series = chart.series.push(new am4charts.ColumnSeries());\n  */\n\n  let series = chart.series.push(new am4charts.LineSeries());\n  /* \n  series.sequencedInterpolation = true;\n  series.columns.template.strokeWidth = 0;\n  */\n\n  series.dataFields.valueY = \"rate\";\n  series.dataFields.categoryX = \"currency\";\n  series.strokeWidth = 2; //series.minBulletDistance = .1;\n\n  series.tooltipText = \"{valueY}\";\n  series.tooltip.pointerOrientation = \"vertical\";\n  series.tooltip.background.cornerRadius = 20;\n  series.tooltip.background.fillOpacity = 0.5;\n  series.tooltip.label.padding(12, 12, 12, 12);\n  /* chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n   */\n\n  chart.cursor = new am4charts.XYCursor();\n  chart.cursor.xAxis = categoryAxis;\n  chart.cursor.snapToSeries = series;\n\n  function generateChartData() {\n    let chartData = [];\n\n    for (const currency in currenciesList) {\n      if (currenciesList.hasOwnProperty(currency)) {\n        const rate = currenciesList[currency];\n        chartData.push({\n          currency: currency,\n          rate: rate\n        });\n      }\n    }\n\n    return chartData;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/CurrencyConversionGraph.js"],"names":["React","am4core","am4charts","am4themes_animated","useTheme","testData","currenciesList","CurrencyConversionGraph","chart","create","XYChart","data","generateChartData","categoryAxis","dataFields","category","renderer","grid","template","location","minGridDistance","tooltip","disabled","valueAxis","yAxes","push","ValueAxis","series","LineSeries","valueY","categoryX","strokeWidth","tooltipText","pointerOrientation","background","cornerRadius","fillOpacity","label","padding","cursor","XYCursor","xAxis","snapToSeries","chartData","currency","hasOwnProperty","rate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nlet testData = {\"rates\":{\"CAD\":1.0,\"HKD\":5.89,\"ISK\":102.72,\"PHP\":36.78,\"DKK\":4.75}};\nlet currenciesList = testData[\"rates\"];\n\nexport default function CurrencyConversionGraph() {\n  let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n  chart.data = generateChartData();\n\n  //let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n  \n  categoryAxis.dataFields.category = \"currency\";\n  categoryAxis.renderer.grid.template.location = 0;\n  categoryAxis.renderer.minGridDistance = 5;\n  categoryAxis.tooltip.disabled = true;\n\n  let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  /* \n  valueAxis.renderer.minWidth = 50;\n  valueAxis.min = 0;\n  valueAxis.cursorTooltipEnabled = false;\n  */\n  /* \n  let series = chart.series.push(new am4charts.ColumnSeries());\n  */\n  let series = chart.series.push(new am4charts.LineSeries());\n  /* \n  series.sequencedInterpolation = true;\n  series.columns.template.strokeWidth = 0;\n  */\n  series.dataFields.valueY = \"rate\";\n  series.dataFields.categoryX = \"currency\";\n  series.strokeWidth = 2;\n  //series.minBulletDistance = .1;\n  series.tooltipText = \"{valueY}\";\n  series.tooltip.pointerOrientation = \"vertical\";\n  series.tooltip.background.cornerRadius = 20;\n  series.tooltip.background.fillOpacity = 0.5;\n  series.tooltip.label.padding(12,12,12,12)\n\n  /* chart.scrollbarX = new am4charts.XYChartScrollbar();\n  chart.scrollbarX.series.push(series);\n   */\n  chart.cursor = new am4charts.XYCursor();\n  chart.cursor.xAxis = categoryAxis;\n  chart.cursor.snapToSeries = series;\n\n  function generateChartData() {\n    let chartData = [];\n\n    for (const currency in currenciesList) {\n      if (currenciesList.hasOwnProperty(currency)) {\n        const rate = currenciesList[currency];\n        chartData.push({\n          currency: currency,\n          rate: rate\n        })\n      }\n    }\n    return chartData;\n  }\n  return (\n    <div id=\"chartdiv\"></div>\n  );\n}"]},"metadata":{},"sourceType":"module"}