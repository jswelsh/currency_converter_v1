{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n/* class Converter extends React.Component {} */\n\nfunction Converter() {\n  const [result, setResult] = useState(null);\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"GBP\");\n  const [amount, setAmount] = useState(1);\n  const [currencies, setCurrencies] = useState([]);\n  /*   \n  constructor(props) {\n    super(props); //need to update this as its depreciated\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  } */\n\n  React.useEffect(() => {\n    console.log('Mounted');\n    axios.get(\"https://api.openrates.io/latest\").then(response => {\n      const currencyArr = [\"EUR\"]; //setting up avb currencies to choose from\n\n      for (const key in response.data.rates) {\n        currencyArr.push(key);\n      }\n\n      setCurrencies(currencyArr);\n    }).catch(err => {\n      console.log(\"Something went wrong\", err);\n    });\n  }, []); // Empty array means to only run once on mount.\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"Lifecycle Function\");\n  /*   \n  componentDidMount() {\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        //setting up avb currencies to choose from\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        this.setState({currencies: currencyArr});\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }; */\n}\n\nexport default Converter;","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/component/converter/converter.js"],"names":["React","useState","axios","Converter","result","setResult","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","currencies","setCurrencies","useEffect","console","log","get","then","response","currencyArr","key","data","rates","push","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AAEA;;AACA,SAASC,SAAT,GAAqB;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA;;;;;;;;;;;;AAYAD,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAd,IAAAA,KAAK,CACFe,GADH,CACO,iCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,WAAW,GAAG,CAAC,KAAD,CAApB,CADgB,CAEhB;;AACA,WAAK,MAAMC,GAAX,IAAkBF,QAAQ,CAACG,IAAT,CAAcC,KAAhC,EAAuC;AACrCH,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,GAAjB;AACD;;AACDR,MAAAA,aAAa,CAACO,WAAD,CAAb;AACD,KATH,EAUGK,KAVH,CAUSC,GAAG,IAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,GAApC;AACD,KAZH;AAaD,GAfD,EAeG,EAfH,EAnBmB,CAkCX;;AACR,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAGA;;;;;;;;;;;;;;;;AAiBD;;AACD,eAAevB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./converter.css\";\n\n/* class Converter extends React.Component {} */\nfunction Converter() {\n\n  const [result, setResult] = useState(null)\n  const [fromCurrency, setFromCurrency] = useState(\"USD\")\n  const [toCurrency, setToCurrency] = useState(\"GBP\")\n  const [amount, setAmount] = useState(1)\n  const [currencies, setCurrencies] = useState([])\n  /*   \n  constructor(props) {\n    super(props); //need to update this as its depreciated\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  } */\n\n  React.useEffect(() => {\n    console.log('Mounted');\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        //setting up avb currencies to choose from\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        setCurrencies(currencyArr);\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }, []); // Empty array means to only run once on mount.\n  return (\n    <div>Lifecycle Function</div>\n  );\n  /*   \n  componentDidMount() {\n    axios\n      .get(\"https://api.openrates.io/latest\")\n      .then(response => {\n        const currencyArr = [\"EUR\"];\n        //setting up avb currencies to choose from\n        for (const key in response.data.rates) {\n          currencyArr.push(key);\n        }\n        this.setState({currencies: currencyArr});\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }; */\n\n}\nexport default Converter"]},"metadata":{},"sourceType":"module"}