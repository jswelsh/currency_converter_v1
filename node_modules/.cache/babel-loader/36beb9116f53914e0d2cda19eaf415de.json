{"ast":null,"code":"var _jsxFileName = \"/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/converter/converter.js\";\nimport React from \"react\";\nimport \"./converter.css\";\nexport default function Converter(props) {\n  /*   const [result, setResult] = useState(null)\n    const [fromCurrency, setFromCurrency] = useState(\"USD\")\n    const [toCurrency, setToCurrency] = useState(\"GBP\")\n    const [amount, setAmount] = useState(1)\n    const [currencies, setCurrencies] = useState([])\n  \n    useEffect(() => {\n      axios\n        .get(\"https://api.exchangeratesapi.io/latest?base=CAD\")\n        .then(res => {\n          const currencyArr = [];\n          //setting up avb currencies to choose from\n          for (const key in res.data.rates) {\n            currencyArr.push(key);\n          }\n          setCurrencies(currencyArr);\n        })\n        .catch(err => {\n          console.log(\"Something went wrong\", err);\n        });\n    }, []); // Empty array to only run once on mount.\n  \n    const convertHandler = () => {\n      if (fromCurrency !== toCurrency) {  \n        axios\n          .get(\n            `https://api.openrates.io/latest?base=${\n              fromCurrency}&symbols=${toCurrency}`\n          )\n          .then(res => {\n            const result = \n              amount * res.data.rates[toCurrency];\n            setResult(result.toFixed(5));\n          })\n          .catch(error => {\n            console.log(\"Opps\", error.message);\n          });\n      } else {\n        setResult(\"You cant convert the same currency!\");\n      }\n    };\n   \n    const selectHandler = e => {\n      if (e.target.name === \"from\") {  \n        setFromCurrency(e.target.value) \n      } else if (e.target.name === \"to\") {\n          setToCurrency(e.target.value)\n        }\n    }\n   */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Currency\"), \"Converter\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"money\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCB5\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"From\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"amount\",\n    type: \"text\",\n    value: props.amount,\n    onChange: e => props.setAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"from\",\n    onChange: e => props.selectHandler(e),\n    value: props.fromCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, props.currenciesList.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n    key: cur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, cur))), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"to\",\n    onChange: e => props.selectHandler(e),\n    value: props.toCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, props.currenciesList.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n    key: cur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, cur))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.convertHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Convert\"), props.result && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, props.results)));\n}","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/currency_converters/currency_converter_v1/src/components/converter/converter.js"],"names":["React","Converter","props","amount","e","setAmount","target","value","selectHandler","fromCurrency","currenciesList","map","cur","toCurrency","convertHandler","result","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,4BAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADJ,eAOI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEA,KAAK,CAACC,MAHf;AAIE,IAAA,QAAQ,EAAEC,CAAC,IAAIF,KAAK,CAACG,SAAN,CAAgBD,CAAC,CAACE,MAAF,CAASC,KAAzB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEH,CAAC,IAAIF,KAAK,CAACM,aAAN,CAAoBJ,CAApB,CAFjB;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACO,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGP,KAAK,CAACQ,cAAN,CAAqBC,GAArB,CAAyBC,GAAG,iBAC3B;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,GAAnB,CADD,CALH,CAPF,eAgBE;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,QAAQ,EAAER,CAAC,IAAIF,KAAK,CAACM,aAAN,CAAoBJ,CAApB,CAFjB;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACW,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGX,KAAK,CAACQ,cAAN,CAAqBC,GAArB,CAAyBC,GAAG,iBAC3B;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,GAAnB,CADD,CALH,CAhBF,eAyBE;AAAQ,IAAA,OAAO,EAAEV,KAAK,CAACY,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBF,EA0BGZ,KAAK,CAACa,MAAN,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,KAAK,CAACc,OAAX,CA1BnB,CAPJ,CADF;AAsCD","sourcesContent":["import React from \"react\";\n\nimport \"./converter.css\";\n\n\nexport default function Converter(props) {\n/*   const [result, setResult] = useState(null)\n  const [fromCurrency, setFromCurrency] = useState(\"USD\")\n  const [toCurrency, setToCurrency] = useState(\"GBP\")\n  const [amount, setAmount] = useState(1)\n  const [currencies, setCurrencies] = useState([])\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.exchangeratesapi.io/latest?base=CAD\")\n      .then(res => {\n        const currencyArr = [];\n        //setting up avb currencies to choose from\n        for (const key in res.data.rates) {\n          currencyArr.push(key);\n        }\n        setCurrencies(currencyArr);\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }, []); // Empty array to only run once on mount.\n\n  const convertHandler = () => {\n    if (fromCurrency !== toCurrency) {  \n      axios\n        .get(\n          `https://api.openrates.io/latest?base=${\n            fromCurrency}&symbols=${toCurrency}`\n        )\n        .then(res => {\n          const result = \n            amount * res.data.rates[toCurrency];\n          setResult(result.toFixed(5));\n        })\n        .catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n    } else {\n      setResult(\"You cant convert the same currency!\");\n    }\n  };\n \n  const selectHandler = e => {\n    if (e.target.name === \"from\") {  \n      setFromCurrency(e.target.value) \n    } else if (e.target.name === \"to\") {\n        setToCurrency(e.target.value)\n      }\n  }\n */\n  return (\n    <div className=\"Converter\">\n        <h2>\n          <span>Currency</span>Converter\n          <span role=\"img\" aria-label=\"money\">\n            &#x1f4b5;\n          </span>\n        </h2>\n        <div className=\"From\">\n          <input\n            name=\"amount\"\n            type=\"text\"\n            value={props.amount}\n            onChange={e => props.setAmount(e.target.value )}\n          />\n          <select\n            name=\"from\"\n            onChange={e => props.selectHandler(e)}\n            value={props.fromCurrency}\n          >\n            {props.currenciesList.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <select\n            name=\"to\"\n            onChange={e => props.selectHandler(e)}\n            value={props.toCurrency}\n          >\n            {props.currenciesList.map(cur => (\n              <option key={cur}>{cur}</option>\n            ))}\n          </select>\n          <button onClick={props.convertHandler}>Convert</button>\n          {props.result && <h3>{props.results}</h3>}\n        </div>\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}